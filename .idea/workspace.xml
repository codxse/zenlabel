<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BookmarkManager">
    <bookmark url="file://$PROJECT_DIR$/src/zenlabel/core.clj" description="&#10;(def ^{:private true} SUBJECTS&#10;  #&quot;(Matematika Wa..." line="5" />
    <bookmark url="file://$PROJECT_DIR$/src/zenlabel/core.clj" description="&#10;(defn- create-enum [namespace-name enum]&#10;  (-&gt;&gt; (..." line="52" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="92b7605b-3db8-4026-9634-4562d4783b34" name="Default" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/zenlabel/core.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/zenlabel/core.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/subjects.edn" beforeDir="false" afterPath="$PROJECT_DIR$/subjects.edn" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="project.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/project.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="90">
              <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="152">
              <caret line="187" column="18" selection-start-line="187" selection-start-column="18" selection-end-line="187" selection-end-column="18" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="content.edn" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/content.edn">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file leaf-file-name="subjects.edn" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/subjects.edn">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="387">
              <caret line="340" column="16" lean-forward="true" selection-start-line="340" selection-start-column="16" selection-end-line="340" selection-end-column="16" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>:teacher-cbt-problem/pola</find>
      <find>10-fisika-inti</find>
      <find>&quot;Fisika SMA Kelas 10 - Kurikulum 2013 Revisi&quot;</find>
      <find>pemikiran-pemikiran-yan</find>
      <find>flatten</find>
      <find>1943</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/subjects.edn" />
        <option value="$PROJECT_DIR$/enum/edn.clj" />
        <option value="$PROJECT_DIR$/src/zenlabel/core.clj" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds" extendedState="6" fullScreen="true">
    <option name="y" value="23" />
    <option name="width" value="1680" />
    <option name="height" value="1027" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="zenlabel" type="b2602c69:ProjectViewProjectNode" />
              <item name="zenlabel" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="zenlabel" type="b2602c69:ProjectViewProjectNode" />
              <item name="zenlabel" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="zenlabel" type="b2602c69:ProjectViewProjectNode" />
              <item name="zenlabel" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="zenlabel" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="PackagesPane" />
      <pane id="AndroidView" />
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="settings.editor.selected.configurable" value="editor.preferences.appearance" />
  </component>
  <component name="ReplState" timestamp="1537195246859">{:repl-history {:ide [], :local [{:command &quot;(def sbj (map :subject pair-content-slugged-cg))&quot;, :offset 48, :ns &quot;zenlabel.core&quot;} {:command &quot;sbj&quot;, :offset 3, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg\n  (let []\n    (-&gt;&gt; (for [scg slugged-cg\n               cc clean-content\n               :when (= (:cg-id scg) (:cg-id cc))]\n           (assoc cc :tags-raw (:tags-raw scg)))\n         (map (fn [m]\n                (assoc m :tags-raw (clojure.string/split (:tags-raw m) #\&quot;,\&quot;))))\n         (map (fn [m]\n                (let [subject (-&gt; (get-in m [:tags-raw] \&quot;\&quot;)\n                                  make-subject-from-slugged-2-vec)]\n                  (assoc m :subject subject)))))))&quot;, :offset 503, :ns &quot;zenlabel.core&quot;} {:command &quot;(def content (clojure.edn/read-string (slurp \&quot;content.edn\&quot;)))&quot;, :offset 61, :ns &quot;zenlabel.core&quot;} {:command &quot;(def clean-content (remove remove-not-mbek content))&quot;, :offset 52, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn make-subject-from-slugged-2-vec\n  [slugged-position-2]\n  (-&gt;&gt; (s/split slugged-position-2 #\&quot;-\&quot;)\n       (remove NEGATIVE_WORDS)\n       (interpose \&quot; \&quot;)\n       s/join))\n&quot;, :offset 172, :ns &quot;zenlabel.core&quot;} {:command &quot;(map :tags-raw pair-content-slugged-cg)&quot;, :offset 39, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg\n  (let []\n    (-&gt;&gt; (for [scg slugged-cg\n               cc clean-content\n               :when (= (:cg-id scg) (:cg-id cc))]\n           (assoc cc :tags-raw (:tags-raw scg)))\n         (map (fn [m]\n                (assoc m :tags-raw (clojure.string/split (:tags-raw m) #\&quot;,\&quot;))))\n         (map (fn [m]\n                (let [tags-raw (:tags-raw m)\n                      subjects (for [t tags-raw]\n                                 (make-subject-from-slugged-2-vec t))]\n                  (assoc m :subject subjects))))\n         )))&quot;, :offset 551, :ns &quot;zenlabel.core&quot;} {:command &quot;(map :name pair-content-slugged-cg)&quot;, :offset 35, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-matcher SUBJECTS  \&quot;Soal SIMAK UI 2009 -Bahasa Indonesia Kode 962\&quot;)&quot;, :offset 70, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-find (re-matcher SUBJECTS \&quot;Soal SIMAK UI 2009 -Bahasa Indonesia Kode 962\&quot;))&quot;, :offset 79, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-find (re-matcher #\&quot;([M|m]atematika)\&quot; \&quot;Soal SIMAK UI 2009 -Bahasa Indonesia Kode 962 Matematika\&quot;))&quot;, :offset 101, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-find (re-matcher #\&quot;([M|m]atematika)\&quot; \&quot;Soal SIMAK UI 2009 -Bahasa Indonesia Kode 962 matematika\&quot;))&quot;, :offset 101, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-find (re-matcher #\&quot;([M|m]atematika [s|S][m|M][p|P])\&quot; \&quot;Soal SIMAK UI 2009 -Bahasa Indonesia Kode 962 matematika smp\&quot;))&quot;, :offset 121, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-find (re-matcher #\&quot;([M|m]atematika [s|S][m|M][p|P])\&quot; \&quot;Soal SIMAK UI 2009 -Bahasa Indonesia Kode 962 matematika smP\&quot;))&quot;, :offset 121, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-find (re-matches #\&quot;(?i).*i am.*\&quot; \&quot;I am Java\&quot;))&quot;, :offset 50, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-seq #\&quot;(?ix) test #Case insensitive and comments allowed\&quot;\n        \&quot;Testing,\\n testing,\\n 1 2 3\&quot;)&quot;, :offset 99, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-seq #\&quot;(?ix) test TesT Test TEST\&quot;\n        \&quot;Testing,\\n testing,\\n 1 2 3\&quot;)&quot;, :offset 75, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-seq #\&quot;(?ix) test\&quot;\n        \&quot;Testing,\\n testing,\\n 1 2 3\&quot;)&quot;, :offset 60, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-seq #\&quot;(?ix)test\&quot;\n        \&quot;Testing,\\n testing,\\n 1 2 3\&quot;)&quot;, :offset 59, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-seq #\&quot;(?ix)test\&quot;\n        \&quot;Testing,\\n testing,\\n TEST 1 2 3\&quot;)&quot;, :offset 64, :ns &quot;zenlabel.core&quot;} {:command &quot;(def ^{:private true} SUBJECTS\n  #\&quot;((?i)matematika|(?i)sosiologi)\&quot;)&quot;, :offset 67, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-seq SUBJECTS \&quot;matematika MAtemaTiKA sosiologi SosiologI\&quot;)&quot;, :offset 61, :ns &quot;zenlabel.core&quot;} {:command &quot;(def ^{:private true} SUBJECTS\n  #\&quot;((?i)matematika|(?i)matematika ipa|(?i)matematika ips|(?i)matematika dasar|(?i)matematika wajib|(?i)matematika peminatan\&quot;)&quot;, :offset 157, :ns &quot;zenlabel.core&quot;} {:command &quot;(def ^{:private true} SUBJECTS\n  #\&quot;((?i)matematika|(?i)matematika ipa|(?i)matematika ips|(?i)matematika dasar|(?i)matematika wajib|(?i)matematika peminatan)\&quot;)&quot;, :offset 158, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-seq SUBJECTS \&quot;MatematiKa PEMInatan\&quot;)&quot;, :offset 40, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-seq #\&quot;((?i)matematika wajib|(?i)matematika peminatan)\&quot; \&quot;MateMatiKa PeminATAN\&quot;)&quot;, :offset 82, :ns &quot;zenlabel.core&quot;} {:command &quot;(def ^{:private true} SUBJECTS\n  #\&quot;((?i)matematika ipa|(?i)matematika ips|(?i)matematika dasar|(?i)matematika wajib|(?i)matematika peminatan|(?i)matematika|(?i)bahasa indonesia|(?i)bahasa inggris|(?i)biologi|(?i)fisika|(?i)kimia|(?i)sejarah indonesia|(?i)sejarah peminatan|(?i)sejarah|(?i)ekonomi|(?i)geografi|(?i)sosiologi)\&quot;)\n&quot;, :offset 327, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-seq SUBJECTS \&quot;sosioloGi\&quot;)&quot;, :offset 29, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-seq SUBJECTS \&quot;sosioloGi SOSIOLOgi MateMatiKA Ips MatemaTIKA IpA\&quot;)&quot;, :offset 69, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg\n  (let []\n    (-&gt;&gt; (for [scg slugged-cg\n               cc clean-content\n               :when (= (:cg-id scg) (:cg-id cc))]\n           (assoc cc :tags-raw (:tags-raw scg)))\n         (map (fn [m]\n                (assoc m :tags-raw (clojure.string/split (:tags-raw m) #\&quot;,\&quot;))))\n         )))&quot;, :offset 315, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg\n  (let []\n    (-&gt;&gt; (for [scg slugged-cg\n               cc clean-content\n               :when (= (:cg-id scg) (:cg-id cc))]\n           (assoc cc :tags-raw (:tags-raw scg)))\n         (map (fn [m]\n                (assoc m :tags-raw-vec (clojure.string/split (:tags-raw m) #\&quot;,\&quot;))))\n         )))&quot;, :offset 319, :ns &quot;zenlabel.core&quot;} {:command &quot;(map :subject pair-content-slugged-cg)&quot;, :offset 38, :ns &quot;zenlabel.core&quot;} {:command &quot;(def ^{:private true} SUBJECTS\n  #\&quot;((?i)matematika ipa|(?i)matematika ips|(?i)matematika dasar|(?i)matematika wajib|(?i)matematika peminatan|(?i)matematika|(?i)bahasa indonesia|(?i)bahasa inggris|(?i)biologi|(?i)fisika|(?i)kimia|(?i)sejarah indonesia|(?i)sejarah peminatan|(?i)sejarah|(?i)ekonomi|(?i)geografi|(?i)sosiologi|(?i)tpa)\&quot;)\n&quot;, :offset 335, :ns &quot;zenlabel.core&quot;} {:command &quot;(count (map :subject-str pair-content-slugged-cg))&quot;, :offset 50, :ns &quot;zenlabel.core&quot;} {:command &quot;(def ^{:private true} SUBJECTS\n  #\&quot;((?i)matematika ipa|(?i)matematika ips|(?i)matematika dasar|(?i)matematika wajib|(?i)matematika peminatan|(?i)matematika|(?i)bahasa indonesia|(?i)bahasa inggris|(?i)biologi|(?i)fisika|(?i)kimia|(?i)sejarah indonesia|(?i)sejarah peminatan|(?i)sejarah|(?i)ekonomi|(?i)geografi|(?i)sosiologi|(?i)tpa|(?i)ipa|(?i)ips)\&quot;)&quot;, :offset 350, :ns &quot;zenlabel.core&quot;} {:command &quot;(filter #(not (nil? (:subject-raw %))) pair-content-slugged-cg)&quot;, :offset 63, :ns &quot;zenlabel.core&quot;} {:command &quot;(filter #(nil? (:subject-raw %)) pair-content-slugged-cg)&quot;, :offset 57, :ns &quot;zenlabel.core&quot;} {:command &quot;(def ^{:private true} SUBJECTS\n  #\&quot;((?i)matematika ipa|(?i)matematika ips|(?i)matematika dasar|(?i)matematika wajib|(?i)matematika peminatan|(?i)matematika|(?i)bahasa indonesia|(?i)bahasa-indonesia|(?i)|(?i)bahasa inggris|(?i)bahasa-inggris|(?i)biologi|(?i)fisika|(?i)kimia|(?i)sejarah indonesia|(?i)sejarah peminatan|(?i)sejarah|(?i)ekonomi|(?i)geografi|(?i)sosiologi|(?i)tpa|(?i)ipa|(?i)ips)\&quot;)\n&quot;, :offset 396, :ns &quot;zenlabel.core&quot;} {:command &quot;(count (filter #(nil? (:subject-str %))  pair-content-slugged-cg))&quot;, :offset 66, :ns &quot;zenlabel.core&quot;} {:command &quot;(re-find #\&quot;(?i)bahasa-indonesia\&quot; \&quot;bahasa-Indonesia\&quot;)&quot;, :offset 52, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg\n  (let []\n    (-&gt;&gt; (for [scg slugged-cg\n               cc clean-content\n               :when (= (:cg-id scg) (:cg-id cc))]\n           (assoc cc :tags-raw (:tags-raw scg)))\n         (map (fn [m]\n                (assoc m :tags-raw-vec (clojure.string/split (:tags-raw m) #\&quot;,\&quot;)\n                         :name-raw (str (:tags-raw m) \&quot; \&quot; (:name m) \&quot; \&quot; (:browser-window-title m)))))\n         (map (fn [m]\n                (assoc m :subject-str (-&gt; (re-matcher SUBJECTS (:name-raw m))\n                                          re-find\n                                          first))))\n         )))&quot;, :offset 620, :ns &quot;zenlabel.core&quot;} {:command &quot;(filter nil? (map :subject-str pair-content-slugged-cg))&quot;, :offset 56, :ns &quot;zenlabel.core&quot;} {:command &quot;(count (filter nil? (map :subject-str pair-content-slugged-cg)))&quot;, :offset 64, :ns &quot;zenlabel.core&quot;} {:command &quot;(filter #(nil? (:subject-str %)) pair-content-slugged-cg)&quot;, :offset 57, :ns &quot;zenlabel.core&quot;} {:command &quot;(def ^{:private true} SUBJECTS\n  #\&quot;((?i)matematika ipa|(?i)matematika ips|(?i)matematika dasar|(?i)matematika wajib|(?i)matematika peminatan|(?i)matematika|(?i)bahasa indonesia|(?i)bahasa-indonesia|(?i)bahasa inggris|(?i)bahasa-inggris|(?i)biologi|(?i)fisika|(?i)kimia|(?i)sejarah indonesia|(?i)sejarah peminatan|(?i)sejarah|(?i)ekonomi|(?i)geografi|(?i)sosiologi|(?i)tpa|(?i)ipa|(?i)ips)\&quot;)\n&quot;, :offset 391, :ns &quot;zenlabel.core&quot;} {:command &quot;(require 'zenlabel.core)&quot;, :offset 24, :ns &quot;zenlabel.core&quot;} {:command &quot;(in-ns 'zenlabel.core)&quot;, :offset 22, :ns &quot;zenlabel.core&quot;} {:command &quot;(def ^{:private true} DATA\n  (-&gt;&gt; (xls/load-workbook \&quot;k13.xlsx\&quot;)\n       (xls/select-sheet \&quot;Default\&quot;)\n       (xls/select-columns\n         {:A :kode-cg-pelajaran-tingkat-kurikulum\n          :B :pelajaran-tingkat-kurikulum\n          :C :kode-content\n          :D :judul-content\n          :E :kode-cg-parent\n          :F :cg-parent\n          :G :total-video\n          :H :durasi-detik})\n       rest))&quot;, :offset 396, :ns &quot;zenlabel.core&quot;} {:command &quot;DATA&quot;, :offset 4, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg\n  (let []\n    (-&gt;&gt; (for [scg slugged-cg\n               cc clean-content\n               :when (= (:cg-id scg) (:cg-id cc))]\n           (assoc cc :tags-raw (:tags-raw scg)))\n         (map (fn [m]\n                (assoc m :tags-raw-vec (clojure.string/split (:tags-raw m) #\&quot;,\&quot;)\n                         :name-raw (str (:tags-raw m) \&quot; \&quot; (:name m) \&quot; \&quot; (:browser-window-title m)))))\n         (map (fn [m]\n                (assoc m :subject-str (-&gt; (re-matcher SUBJECTS (:name-raw m))\n                                          re-find\n                                          first))))\n         (remove (fn [m]\n                   (nil? (:subject-str m))))\n         )))&quot;, :offset 690, :ns &quot;zenlabel.core&quot;} {:command &quot;(map :subject-str pair-content-slugged-cg)&quot;, :offset 42, :ns &quot;zenlabel.core&quot;} {:command &quot;(distinct (map :subject-str pair-content-slugged-cg))&quot;, :offset 53, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn make-chapter [m]\n  (-&gt;&gt; (s/split (:cg-parent m) #\&quot;\\s\&quot;)\n       (remove NEGATIVE_WORDS)\n       (interpose \&quot; \&quot;)\n       s/join))&quot;, :offset 130, :ns &quot;zenlabel.core&quot;} {:command &quot;(make-chapter {:cg-parent \&quot;Matematika IPA\&quot;})&quot;, :offset 44, :ns &quot;zenlabel.core&quot;} {:command &quot;(apply clojure.string/lower-case \&quot;Matematika IPA\&quot;)&quot;, :offset 50, :ns &quot;zenlabel.core&quot;} {:command &quot;(clojure.string/lower-case \&quot;Matematika IPA\&quot;)&quot;, :offset 44, :ns &quot;zenlabel.core&quot;} {:command &quot;(clojure.string/split \&quot;Matematika IPA\&quot; #\&quot;\\s\&quot;)&quot;, :offset 45, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; (clojure.string/split \&quot;Matematika IPA\&quot; #\&quot;\\s\&quot;) \n     (interpose \&quot;-\&quot;) \n     keyword)&quot;, :offset 87, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; (clojure.string/split \&quot;Matematika IPA\&quot; #\&quot;\\s\&quot;) \n     (interpose \&quot;-\&quot;))&quot;, :offset 73, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; (clojure.string/split \&quot;Matematika IPA\&quot; #\&quot;\\s\&quot;) \n     (interpose \&quot;-\&quot;)\n     (apply str))&quot;, :offset 90, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; (clojure.string/split \&quot;Matematika IPA\&quot; #\&quot;\\s\&quot;) \n     (interpose \&quot;-\&quot;)\n     (apply str) \n     keyword)&quot;, :offset 104, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg\n  (let []\n    (-&gt;&gt; (for [scg slugged-cg\n               cc clean-content\n               :when (= (:cg-id scg) (:cg-id cc))]\n           (assoc cc :tags-raw (:tags-raw scg)))\n         (map (fn [m]\n                (assoc m :tags-raw-vec (clojure.string/split (:tags-raw m) #\&quot;,\&quot;)\n                         :name-raw (str (:tags-raw m) \&quot; \&quot; (:name m) \&quot; \&quot; (:browser-window-title m)))))\n         (map (fn [m]\n                (assoc m :subject-str (-&gt; (re-matcher SUBJECTS (:name-raw m))\n                                          re-find\n                                          first))))\n         (remove (fn [m]\n                   (nil? (:subject-str m))))\n         (map (fn [m]\n                (let [subject-str (:subject-str m)\n                      subject-str-lowercase (clojure.string/lower-case subject-str)\n                      subject-keyword (-&gt;&gt; (s/split subject-str-lowercase #\&quot;\\s\&quot;)\n                                           (interpose \&quot;-\&quot;)\n                                           (apply str)\n                                           keyword)]\n                  (assoc m :subject-keyword subject-keyword)))))))&quot;, :offset 1149, :ns &quot;zenlabel.core&quot;} {:command &quot;(= :tpa :TPA)&quot;, :offset 13, :ns &quot;zenlabel.core&quot;} {:command &quot;(map :subject-keyword pair-content-slugged-cg)&quot;, :offset 46, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg\n  (let []\n    (-&gt;&gt; (for [scg slugged-cg\n               cc content\n               :when (= (:cg-id scg) (:cg-id cc))]\n           (assoc cc :tags-raw (:tags-raw scg)))\n         (map (fn [m]\n                (assoc m :tags-raw-vec (clojure.string/split (:tags-raw m) #\&quot;,\&quot;)\n                         :name-raw (str (:tags-raw m) \&quot; \&quot; (:name m) \&quot; \&quot; (:browser-window-title m)))))\n         (map (fn [m]\n                (assoc m :subject-str (-&gt; (re-matcher SUBJECTS (:name-raw m))\n                                          re-find\n                                          first))))\n         (remove (fn [m]\n                   (nil? (:subject-str m))))\n         (map (fn [m]\n                (let [subject-str (:subject-str m)\n                      subject-str-lowercase (clojure.string/lower-case subject-str)\n                      subject-keyword (-&gt;&gt; (s/split subject-str-lowercase #\&quot;\\s\&quot;)\n                                           (interpose \&quot;-\&quot;)\n                                           (apply str)\n                                           keyword)]\n                  (assoc m :subject-keyword (if (= :tpa subject-keyword) :TPA subject-keyword))))))))&quot;, :offset 1178, :ns &quot;zenlabel.core&quot;} {:command &quot;pair-content-slugged-cg&quot;, :offset 23, :ns &quot;zenlabel.core&quot;} {:command &quot;(group-by :subject-keyword pair-content-slugged-cg)&quot;, :offset 51, :ns &quot;zenlabel.core&quot;} {:command &quot;(def ^{:private true} SUBJECTS\n  #\&quot;((?i)matematika ipa|(?i)matematika-ipa|(?i)matematika ips|(?i)matematika-ips|(?i)matematika dasar|(?i)matematika-dasar|(?i)matematika wajib|(?i)matematika-wajib|(?i)matematika peminatan|(?i)matematika-peminatan|(?i)matematika|(?i)bahasa indonesia|(?i)bahasa-indonesia|(?i)bahasa inggris|(?i)bahasa-inggris|(?i)biologi|(?i)fisika|(?i)kimia|(?i)sejarah indonesia|(?i)sejarah-indonesia|(?i)sejarah peminatan|(?i)sejarah-peminatan|(?i)sejarah|(?i)ekonomi|(?i)geografi|(?i)sosiologi|(?i)tpa|(?i)ipa|(?i)ips)\&quot;)\n&quot;, :offset 540, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg\n  (let []\n    (-&gt;&gt; (for [scg slugged-cg\n               cc clean-content\n               :when (= (:cg-id scg) (:cg-id cc))]\n           (assoc cc :tags-raw (:tags-raw scg)))\n         (map (fn [m]\n                (assoc m :tags-raw-vec (clojure.string/split (:tags-raw m) #\&quot;,\&quot;)\n                         :name-raw (str (:tags-raw m) \&quot; \&quot; (:name m) \&quot; \&quot; (:browser-window-title m)))))\n         (map (fn [m]\n                (assoc m :subject-str (-&gt; (re-matcher SUBJECTS (:name-raw m))\n                                          re-find\n                                          first))))\n         (remove (fn [m]\n                   (nil? (:subject-str m))))\n         (map (fn [m]\n                (let [subject-str (:subject-str m)\n                      subject-str-lowercase (clojure.string/lower-case subject-str)\n                      subject-keyword (-&gt;&gt; (s/split subject-str-lowercase #\&quot;\\s\&quot;)\n                                           (interpose \&quot;-\&quot;)\n                                           (apply str)\n                                           keyword)]\n                  (assoc m :subject-keyword (if (= :tpa subject-keyword) :TPA subject-keyword))))))))&quot;, :offset 1184, :ns &quot;zenlabel.core&quot;} {:command &quot;(distinct (map :subject-keyword pair-content-slugged-cg))&quot;, :offset 57, :ns &quot;zenlabel.core&quot;} {:command &quot;(spit \&quot;pair.edn\&quot; (with-out-str (clojure.pprint/pprint (group-by :subject-keyword pair-content-slugged-cg))))&quot;, :offset 108, :ns &quot;zenlabel.core&quot;} {:command &quot;(sort (map :canonical-name pair-content-slugged-cg))&quot;, :offset 52, :ns &quot;zenlabel.core&quot;} {:command &quot;(count (distinct (sort (map :canonical-name pair-content-slugged-cg))))&quot;, :offset 71, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg\n  (let []\n    (-&gt;&gt; (for [scg slugged-cg\n               cc clean-content\n               :when (= (:cg-id scg) (:cg-id cc))]\n           (assoc cc :tags-raw (:tags-raw scg)))\n         (map (fn [m]\n                (assoc m :tags-raw-vec (clojure.string/split (:tags-raw m) #\&quot;,\&quot;)\n                         :name-raw (str (:tags-raw m) \&quot; \&quot; (:name m) \&quot; \&quot; (:browser-window-title m)))))\n         (map (fn [m]\n                (assoc m :subject-str (-&gt; (re-matcher SUBJECTS (:name-raw m))\n                                          re-find\n                                          first))))\n         (remove (fn [m]\n                   (nil? (:subject-str m))))\n         (map (fn [m]\n                (let [subject-str (:subject-str m)\n                      subject-str-lowercase (clojure.string/lower-case subject-str)\n                      subject-keyword (-&gt;&gt; (s/split subject-str-lowercase #\&quot;\\s\&quot;)\n                                           (interpose \&quot;-\&quot;)\n                                           (apply str)\n                                           keyword)]\n                  (assoc m :subject-keyword (if (= :tpa subject-keyword) :TPA subject-keyword)\n                           :chapter (keyword (:canonical-name m)))))))))&quot;, :offset 1250, :ns &quot;zenlabel.core&quot;} {:command &quot;\n(defn get-subject-chapter-map\n  []\n  (-&gt;&gt; (for [[subject values] (sort pair-content-slugged-cg-by-subject)]\n         [subject (map :chapter values)])\n       (into {})))&quot;, :offset 169, :ns &quot;zenlabel.core&quot;} {:command &quot;(remove #(= :a %) [:a :b :c :d :e])&quot;, :offset 35, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn get-subject-chapter-map\n  []\n  (-&gt;&gt; (for [[subject values] (sort pair-content-slugged-cg-by-subject)]\n         [subject (-&gt;&gt; (distinct (map :chapter values))\n                       (remove #(= subject (:chapter %))))])\n       (into {})))&quot;, :offset 243, :ns &quot;zenlabel.core&quot;} {:command &quot;get-subject-chapter-map&quot;, :offset 23, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn get-subject-chapter-map\n  []\n  (-&gt;&gt; (for [[subject values] (sort pair-content-slugged-cg-by-subject)]\n         [subject (-&gt;&gt; (distinct (map :chapter values))\n                       (remove #(= subject (:chapter %)))\n                       vec sort)])\n       (into {})))&quot;, :offset 275, :ns &quot;zenlabel.core&quot;} {:command &quot;(get-subject-chapter-map)&quot;, :offset 25, :ns &quot;zenlabel.core&quot;} {:command &quot;(def ^{:private true} NEGATIVE_WORDS\n  (apply merge\n         (-&gt;&gt; (range 1 50) (map str) set)\n         #{\&quot;Bab\&quot; \&quot;bab\&quot; \&quot;-\&quot; \&quot;01\&quot; \&quot;02\&quot; \&quot;03\&quot; \&quot;04\&quot; \&quot;05\&quot; \&quot;06\&quot; \&quot;07\&quot; \&quot;08\&quot; \&quot;09\&quot;}))&quot;, :offset 168, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; (clojure.string/split \&quot;soal-un-sma-matematika-ips-2008\&quot; #\&quot;-\&quot;) \n     (remove NEGATIVE_WORDS))&quot;, :offset 97, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; (clojure.string/split \&quot;soal-un-sma-matematika-ips-2008\&quot; #\&quot;-\&quot;) \n     (remove NEGATIVE_WORDS) \n     (interpose \&quot;-\&quot;) \n     clojure.string/join)&quot;, :offset 145, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg\n  (let []\n    (-&gt;&gt; (for [scg slugged-cg\n               cc clean-content\n               :when (= (:cg-id scg) (:cg-id cc))]\n           (assoc cc :tags-raw (:tags-raw scg)))\n         (map (fn [m]\n                (assoc m :tags-raw-vec (clojure.string/split (:tags-raw m) #\&quot;,\&quot;)\n                         :name-raw (str (:tags-raw m) \&quot; \&quot; (:name m) \&quot; \&quot; (:browser-window-title m)))))\n         (map (fn [m]\n                (assoc m :subject-str (-&gt; (re-matcher SUBJECTS (:name-raw m))\n                                          re-find\n                                          first))))\n         (remove (fn [m]\n                   (nil? (:subject-str m))))\n         (map (fn [m]\n                (let [subject-str (:subject-str m)\n                      subject-str-lowercase (clojure.string/lower-case subject-str)\n                      subject-keyword (-&gt;&gt; (s/split subject-str-lowercase #\&quot;\\s\&quot;)\n                                           (interpose \&quot;-\&quot;)\n                                           (apply str)\n                                           keyword)]\n                  (assoc m :subject-keyword (if (= :tpa subject-keyword) :TPA subject-keyword)\n                           :chapter (-&gt;&gt; (clojure.string/split (:canonical-name m) #\&quot;-\&quot;)\n                                         (remove NEGATIVE_WORDS)\n                                         (interpose \&quot;-\&quot;)\n                                         clojure.string/join\n                                         keyword))))))))&quot;, :offset 1506, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg-by-subject\n  (group-by :subject-keyword pair-content-slugged-cg))&quot;, :offset 94, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn get-subject-chapter-map\n  []\n  (-&gt;&gt; (for [[subject values] (sort pair-content-slugged-cg-by-subject)]\n         [subject (-&gt;&gt; (distinct (map :chapter values))\n                       (remove #(= subject (:chapter %)))\n                       sort vec)])\n       (into {})))&quot;, :offset 275, :ns &quot;zenlabel.core&quot;} {:command &quot;(spit \&quot;new-subjects.edn\&quot; (with-out-str (clojure.pprint/pprint (get-subject-chapter-map))))&quot;, :offset 90, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg-by-cg\n  (group-by :cg-id pair-content-slugged-cg))&quot;, :offset 79, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg-by-cg\n  (let [gc (group-by :cg-id pair-content-slugged-cg)]\n    (-&gt;&gt; (for [[k values] (sort gc)]\n           [k (select-keys values [:subject-keyword :chapter :canonical-name])])\n         (into {}))))&quot;, :offset 228, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg-by-cg\n  (let [gc (group-by :cg-id pair-content-slugged-cg)]\n    (-&gt;&gt; (for [[k values] (sort gc)]\n           [k (map #(select-keys % [:subject-keyword :chapter :canonical-name]) values)])\n         (into {}))))&quot;, :offset 237, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg-by-cg\n  (let [gc (group-by :cg-id pair-content-slugged-cg)]\n    (-&gt;&gt; (for [[k values] (sort gc)]\n           [k (mapv #(select-keys % [:subject-keyword :chapter :canonical-name]) values)])\n         (into {}))))\n&quot;, :offset 239, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg-by-cg\n  (let [gc (group-by :cg-id pair-content-slugged-cg)]\n    (-&gt;&gt; (for [[k values] (sort gc)]\n           [k (mapv #(select-keys % [:subject-keyword :chapter :canonical-name]) values)])\n         (into (sorted-map)))))&quot;, :offset 248, :ns &quot;zenlabel.core&quot;} {:command &quot;pair-content-slugged-cg-by-cg&quot;, :offset 29, :ns &quot;zenlabel.core&quot;} {:command &quot;(def pair-content-slugged-cg\n  (let []\n    (-&gt;&gt; (for [scg slugged-cg\n               cc content\n               :when (= (:cg-id scg) (:cg-id cc))]\n           (assoc cc :tags-raw (:tags-raw scg)))\n         (map (fn [m]\n                (assoc m :tags-raw-vec (clojure.string/split (:tags-raw m) #\&quot;,\&quot;)\n                         :name-raw (str (:tags-raw m) \&quot; \&quot; (:name m) \&quot; \&quot; (:browser-window-title m)))))\n         (map (fn [m]\n                (assoc m :subject-str (-&gt; (re-matcher SUBJECTS (:name-raw m))\n                                          re-find\n                                          first))))\n         (remove (fn [m]\n                   (nil? (:subject-str m))))\n         (map (fn [m]\n                (let [subject-str (:subject-str m)\n                      subject-str-lowercase (clojure.string/lower-case subject-str)\n                      subject-keyword (-&gt;&gt; (s/split subject-str-lowercase #\&quot;\\s\&quot;)\n                                           (interpose \&quot;-\&quot;)\n                                           (apply str)\n                                           keyword)]\n                  (assoc m :subject-keyword (if (= :tpa subject-keyword) :TPA subject-keyword)\n                           :chapter (-&gt;&gt; (clojure.string/split (:canonical-name m) #\&quot;-\&quot;)\n                                         (remove NEGATIVE_WORDS)\n                                         (interpose \&quot;-\&quot;)\n                                         clojure.string/join\n                                         keyword))))))))&quot;, :offset 1500, :ns &quot;zenlabel.core&quot;} {:command &quot;\n(def pair-content-slugged-cg-by-subject\n  (group-by :subject-keyword pair-content-slugged-cg))\n\n(def pair-content-slugged-cg-by-cg\n  (let [gc (group-by :cg-id pair-content-slugged-cg)]\n    (-&gt;&gt; (for [[k values] (sort gc)]\n           [k (mapv #(select-keys % [:subject-keyword :chapter :canonical-name]) values)])\n         (into (sorted-map)))))\n\n(defn get-subject-chapter-map\n  []\n  (-&gt;&gt; (for [[subject values] (sort pair-content-slugged-cg-by-subject)]\n         [subject (-&gt;&gt; (distinct (map :chapter values))\n                       (remove #(= subject (:chapter %)))\n                       sort vec)])\n       (into {})))&quot;, :offset 622, :ns &quot;zenlabel.core&quot;} {:command &quot;(spit \&quot;cg-map2.edn\&quot; (with-out-str (clojure.pprint/pprint pair-content-slugged-cg-by-cg)))&quot;, :offset 89, :ns &quot;zenlabel.core&quot;} {:command &quot;(for [a #{1 2 3} \n      b #{1 2 3} \n      :when (not= a b)] \n  [a b])&quot;, :offset 69, :ns &quot;zenlabel.core&quot;} {:command &quot;(into #{} (range 10))&quot;, :offset 21, :ns &quot;zenlabel.core&quot;} {:command &quot;(* 10 10 10)&quot;, :offset 12, :ns &quot;zenlabel.core&quot;} {:command &quot;(let [a (into #{} (range 10))] \n  (for [s1 a \n        s2 a \n        s3 a \n        s4 a \n        s5 a \n        s6 a \n        s7 a \n        s8 a \n        s9 a \n        s10 a\n        :when (= s1 s2 s3 s4 s5 s6 s7 s8 s9 s10)] \n    [s1 s2 s3 s4 s5 s6 s7 s8 s9 s10]))&quot;, :offset 261, :ns &quot;zenlabel.core&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
    </configuration>
    <configuration name="nREPL" type="ClojureREPL" factoryName="Local">
      <module name="zenlabel" />
      <setting name="replType" value="1" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <patterns />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <properties />
      <listeners />
    </configuration>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="92b7605b-3db8-4026-9634-4562d4783b34" name="Default" comment="" />
      <created>1532486632228</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1532486632228</updated>
      <workItem from="1532486639278" duration="18665000" />
      <workItem from="1532595553396" duration="2898000" />
      <workItem from="1532680912100" duration="2170000" />
      <workItem from="1532767287456" duration="1898000" />
      <workItem from="1532849721312" duration="1245000" />
      <workItem from="1536834049511" duration="3557000" />
      <workItem from="1537160928592" duration="10472000" />
      <workItem from="1537176019577" duration="6698000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="47603000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="0" width="1280" height="800" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="right" id="Palette&#9;" order="4" />
      <window_info id="Image Layers" order="2" />
      <window_info anchor="right" id="Capture Analysis" order="5" />
      <window_info anchor="bottom" id="Event Log" order="7" side_tool="true" />
      <window_info anchor="right" id="Maven Projects" order="6" />
      <window_info anchor="bottom" id="Database Changes" order="8" show_stripe_button="false" />
      <window_info active="true" anchor="bottom" id="REPL" order="11" sideWeight="0.64781904" side_tool="true" visible="true" weight="0.6327373" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Version Control" order="9" sideWeight="0.35218093" visible="true" weight="0.6327373" />
      <window_info anchor="right" id="Leiningen" order="7" />
      <window_info anchor="bottom" id="Terminal" order="10" sideWeight="0.44932845" weight="0.42169908" />
      <window_info id="Capture Tool" order="2" />
      <window_info id="Designer" order="2" />
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.3546042" />
      <window_info anchor="right" id="Database" order="8" />
      <window_info id="Learn" order="2" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info id="UI Designer" order="2" />
      <window_info anchor="right" id="Theme Preview" order="9" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="bottom" id="Find" order="1" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="240">
          <caret line="16" column="27" selection-start-line="16" selection-start-column="27" selection-end-line="16" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2415">
          <caret line="161" column="12" lean-forward="true" selection-start-line="161" selection-start-column="12" selection-end-line="161" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1470">
          <caret line="98" selection-start-line="98" selection-end-line="112" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/raden.edn" />
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="240">
          <caret line="16" column="27" selection-start-line="16" selection-start-column="27" selection-end-line="16" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1335">
          <caret line="89" column="42" selection-start-line="89" selection-start-column="42" selection-end-line="89" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="555">
          <caret line="37" column="18" lean-forward="true" selection-end-line="341" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="240">
          <caret line="16" column="12" lean-forward="true" selection-start-line="16" selection-start-column="12" selection-end-line="16" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1380">
          <caret line="92" column="48" lean-forward="true" selection-start-line="92" selection-start-column="48" selection-end-line="92" selection-end-column="48" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="4905">
          <caret line="327" column="18" selection-start-line="327" selection-start-column="18" selection-end-line="327" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2460">
          <caret line="164" column="38" lean-forward="true" selection-start-line="164" selection-start-column="38" selection-end-line="164" selection-end-column="38" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1110">
          <caret line="74" selection-start-line="74" selection-start-column="1" selection-end-line="78" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="4905">
          <caret line="327" column="18" selection-start-line="327" selection-start-column="18" selection-end-line="327" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/raden.edn" />
    <entry file="file://$PROJECT_DIR$/cg-map.edn">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/pair.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="10" column="52" lean-forward="true" selection-start-line="10" selection-start-column="19" selection-end-line="10" selection-end-column="52" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cg-map2.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-2760">
          <caret line="10" column="25" lean-forward="true" selection-start-line="10" selection-start-column="25" selection-end-line="10" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/new-subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-6054">
          <caret line="11" column="36" lean-forward="true" selection-start-line="11" selection-start-column="36" selection-end-line="11" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="387">
          <caret line="340" column="16" lean-forward="true" selection-start-line="340" selection-start-column="16" selection-end-line="340" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/content.edn">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="152">
          <caret line="187" column="18" selection-start-line="187" selection-start-column="18" selection-end-line="187" selection-end-column="18" />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArquillianSettingsConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>