<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BookmarkManager">
    <bookmark url="file://$PROJECT_DIR$/src/zenlabel/core.clj" description="&#10;(def ^{:private true} SUBJECTS&#10;  #&quot;(Matematika Wa..." line="12" />
    <bookmark url="file://$PROJECT_DIR$/src/zenlabel/core.clj" description="&#10;(defn- create-enum [namespace-name enum]&#10;  (-&gt;&gt; (..." line="59" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="92b7605b-3db8-4026-9634-4562d4783b34" name="Default" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/zenlabel/core.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/zenlabel/core.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/subjects.edn" beforeDir="false" afterPath="$PROJECT_DIR$/subjects.edn" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="239">
              <caret line="293" column="30" lean-forward="true" selection-start-line="293" selection-start-column="30" selection-end-line="293" selection-end-column="30" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="chapters.edn" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/chapters.edn">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-21732">
              <caret line="10" column="18" selection-start-line="10" selection-start-column="18" selection-end-line="10" selection-end-column="18" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="content-map.edn" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/content-map.edn">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="190">
              <caret line="5476" column="27" selection-start-line="5476" selection-start-column="13" selection-end-line="5476" selection-end-column="27" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="chapter-to-content-id.edn" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/chapter-to-content-id.edn">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="270">
              <caret line="18" column="5" selection-start-line="18" selection-start-column="5" selection-end-line="18" selection-end-column="5" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>:limit-fungsi-aljabar</find>
      <find>:matematika-</find>
      <find>:sistem-persamaan-linier-tiga-variabel</find>
      <find>content-map</find>
      <find>cg-map</find>
      <find>lain</find>
      <find>lain-lain</find>
      <find>kemampuan</find>
      <find>:fisika-atom-dan</find>
      <find>fisika-atom-dan</find>
      <find>fisika-atom</find>
      <find>:essay</find>
      <find>update</find>
      <find>set</find>
      <find>:set</find>
      <find>parabola-elips</find>
      <find>parabola-elipsx</find>
      <find>percobaa</find>
      <find>apter</find>
      <find>dalam-perekonomian</find>
      <find>revisi</find>
      <find>-0-</find>
      <find>-i-</find>
      <find>bilangan-cacah</find>
      <find>0-</find>
      <find>smp</find>
      <find>un</find>
      <find>nasional</find>
      <find>sma</find>
      <find>mekanika-gravitasi</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/subjects.edn" />
        <option value="$PROJECT_DIR$/enum/edn.clj" />
        <option value="$PROJECT_DIR$/new-chapters.edn" />
        <option value="$PROJECT_DIR$/chapter-to-content-id.edn" />
        <option value="$PROJECT_DIR$/chapters.edn" />
        <option value="$PROJECT_DIR$/src/zenlabel/core.clj" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds" fullScreen="true">
    <option name="width" value="1680" />
    <option name="height" value="1050" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="zenlabel" type="b2602c69:ProjectViewProjectNode" />
              <item name="zenlabel" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="zenlabel" type="b2602c69:ProjectViewProjectNode" />
              <item name="zenlabel" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
      <pane id="AndroidView" />
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="ReplState" timestamp="1538451691419">{:repl-history {:ide [], :local [{:command &quot;(spit \&quot;new-chapters.edn\&quot; (with-out-str (-&gt;&gt; (for [[subject data] (sort pair-content-slugged-cg-by-subject)]\n                                              [subject (-&gt; (mapv :chapter data) \n                                                           distinct \n                                                           vec)])\n                                            (into (sorted-map))\n                                            clojure.pprint/pprint)))&quot;, :offset 456, :ns &quot;zenlabel.core&quot;} {:command &quot;(dev)&quot;, :offset 5, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; {:a [:a :b :c] \n      :b [:c :b :a]} \n     (#(fn [[a b]] [a (vec (sort b))])))&quot;, :offset 83, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; {:a [:a :b :c] \n      :b [:c :b :a]} \n     (#(fn [_ [a b]] [a (vec (sort b))])))&quot;, :offset 85, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; {:a [:a :b :c] \n      :b [:c :b :a]} \n     (#(fn [z [a b]] [a (vec (sort b))])))&quot;, :offset 85, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; {:a [:a :b :c] \n      :b [:c :b :a]} \n     #(fn [z [a b]] [a (vec (sort b))]))&quot;, :offset 83, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; {:a [:a :b :c] \n      :b [:c :b :a]} \n     (fn [z [a b]] [a (vec (sort b))]))&quot;, :offset 82, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; {:a [:a :b :c] \n      :b [:c :b :a]}\n     ((fn [z [a b]] [a (vec (sort b))])))&quot;, :offset 83, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt; {:a [:a :b :c] \n    :b [:c :b :a]}\n    ((fn [z [a b]] [a (vec (sort b))])))&quot;, :offset 79, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; {:a [:a :b :c] \n      :b [:c :b :a]}\n     (map (fn [_ [a b]] [a (sort b)])))&quot;, :offset 81, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; {:a [:a :b :c] \n      :b [:c :b :a]}\n     (map (fn [[a b]] [a (sort b)])))&quot;, :offset 79, :ns &quot;zenlabel.core&quot;} {:command &quot;(spit \&quot;new-chapters.edn\&quot; (with-out-str (-&gt;&gt; (for [[subject data] (sort pair-content-slugged-cg-by-subject)]\n                                              [subject (sort (mapv :chapter data))])\n                                            (into (sorted-map))\n                                            clojure.pprint/pprint)))&quot;, :offset 325, :ns &quot;zenlabel.core&quot;} {:command &quot;(spit \&quot;new-chapters.edn\&quot; (with-out-str (-&gt;&gt; (for [[subject data] (sort pair-content-slugged-cg-by-subject)]\n                                              [subject (sort (distinct (mapv :chapter data)))])\n                                            (into (sorted-map))\n                                            clojure.pprint/pprint)))&quot;, :offset 336, :ns &quot;zenlabel.core&quot;} {:command &quot;(spit \&quot;new-chapters.edn\&quot; (with-out-str (-&gt;&gt; (for [[subject data] (sort pair-content-slugged-cg-by-subject)]\n                                              [subject (vec (sort (distinct (map :chapter data))))])\n                                            (into (sorted-map))\n                                            clojure.pprint/pprint)))&quot;, :offset 341, :ns &quot;zenlabel.core&quot;} {:command &quot;(def content-map (slurp (clojure.edn/read-string \&quot;content-map.edn\&quot;)))&quot;, :offset 69, :ns &quot;zenlabel.core&quot;} {:command &quot;(def content-map (clojure.edn/read-string (slurp \&quot;content-map.edn\&quot;)))&quot;, :offset 69, :ns &quot;zenlabel.core&quot;} {:command &quot;(map (fn [[_ v]] (count v)) content-map)&quot;, :offset 40, :ns &quot;zenlabel.core&quot;} {:command &quot;(every? #(= % 1) (map (fn [[_ v]] (count v)) content-map))&quot;, :offset 58, :ns &quot;zenlabel.core&quot;} {:command &quot;(require '[zenlabel.core])&quot;, :offset 26, :ns &quot;zenlabel.core&quot;} {:command &quot;(def a :gelombang-mekanik-soal)&quot;, :offset 31, :ns &quot;zenlabel.core&quot;} {:command &quot;(clojure.string/split (name a) #\&quot;-\&quot;)&quot;, :offset 36, :ns &quot;zenlabel.core&quot;} {:command &quot;(def x (clojure.string/split (name a) #\&quot;-\&quot;))&quot;, :offset 44, :ns &quot;zenlabel.core&quot;} {:command &quot;(remove #{\&quot;soal\&quot; \&quot;latihan\&quot;} x)&quot;, :offset 30, :ns &quot;zenlabel.core&quot;} {:command &quot;(name a)&quot;, :offset 8, :ns &quot;zenlabel.core&quot;} {:command &quot;(clojure.string/replace (name a) #\&quot;soal\&quot;)&quot;, :offset 41, :ns &quot;zenlabel.core&quot;} {:command &quot;(clojure.string/replace (name a) #\&quot;soal\&quot; \&quot;\&quot;)&quot;, :offset 44, :ns &quot;zenlabel.core&quot;} {:command &quot;(clojure.string/replace (name a) #\&quot;soal|mekanik\&quot; \&quot;\&quot;)&quot;, :offset 52, :ns &quot;zenlabel.core&quot;} {:command &quot;(def negative-keywords [\&quot;latihan-soal-ulangan\&quot; \&quot;latihan-soal-part\&quot; \&quot;latihan-soal\&quot; \&quot;subbab\&quot; \&quot;set-soal\&quot; \&quot;soal-set\&quot; \&quot;teori\&quot; \&quot;konsep\&quot; \&quot;materi\&quot; \&quot;soal\&quot;])\n&quot;, :offset 148, :ns &quot;zenlabel.core&quot;} {:command &quot;(interpose \&quot;|\&quot; negative-keywords)&quot;, :offset 33, :ns &quot;zenlabel.core&quot;} {:command &quot;(apply str (interpose \&quot;|\&quot; negative-keywords))&quot;, :offset 45, :ns &quot;zenlabel.core&quot;} {:command &quot;(clojure.string/re)&quot;, :offset 19} {:command &quot;(clojure.string/split \&quot;kuantum----\&quot; #\&quot;-\&quot;)&quot;, :offset 41, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn clean-chapter\n  [keyword-chapter]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (apply str (clojure.string/split filtered-chapter #\&quot;-\&quot;))]\n    (keyword filtered-dash)))&quot;, :offset 342, :ns &quot;zenlabel.core&quot;} {:command &quot;content-map&quot;, :offset 11, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; content-map\n     (fn [[k [m]]]\n       (let [old-chapter (:chapter m)]\n         {k (-&gt; (assoc m :old-chapter old-chapter)\n                (assoc m :new-chapter (clean-chapter old-chapter))\n                (dissoc :chapter))}))\n     (into (sorted-map)))&quot;, :offset 256, :ns &quot;zenlabel.core&quot;} {:command &quot;\n(-&gt;&gt; content-map\n     (map (fn [[k [m]]]\n            (let [old-chapter (:chapter m)]\n              {k (-&gt; (assoc m :old-chapter old-chapter)\n                     (assoc m :new-chapter (clean-chapter old-chapter))\n                     (dissoc :chapter))})))\n     (into (sorted-map)))&quot;, :offset 283, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn clean-chapter\n  [keyword-chapter]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (apply str (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                                      (interpose \&quot; \&quot;)))]\n    (keyword filtered-dash)))\n\n(-&gt;&gt; content-map\n     (map (fn [[k [m]]]\n            (let [old-chapter (:chapter m)]\n              {k (-&gt; (assoc m :old-chapter old-chapter)\n                     (assoc :new-chapter (clean-chapter old-chapter))\n                     (dissoc :chapter))})))\n     (into (sorted-map)))&quot;, :offset 684, :ns &quot;zenlabel.core&quot;} {:command &quot;(count (group-by :new-chapter))&quot;, :offset 31, :ns &quot;zenlabel.core&quot;} {:command &quot;(count (group-by *1 :new-chapter))&quot;, :offset 34, :ns &quot;zenlabel.core&quot;} {:command &quot;(def nw *1)&quot;, :offset 11, :ns &quot;zenlabel.core&quot;} {:command &quot;nw&quot;, :offset 2, :ns &quot;zenlabel.core&quot;} {:command &quot;(count (group-by nw :new-chapter))&quot;, :offset 34, :ns &quot;zenlabel.core&quot;} {:command &quot;(count (group-by :new-chapter nw))&quot;, :offset 34, :ns &quot;zenlabel.core&quot;} {:command &quot;(count (group-by (fn [k v]\n                   (:new-chapter v)) (sort nw)))&quot;, :offset 75, :ns &quot;zenlabel.core&quot;} {:command &quot;(count (group-by (fn [[k v]]\n                   (:new-chapter v)) (sort nw)))&quot;, :offset 77, :ns &quot;zenlabel.core&quot;} {:command &quot;(count nw)&quot;, :offset 10, :ns &quot;zenlabel.core&quot;} {:command &quot;(group-by (fn [[k v]]\n                   (:new-chapter v)) (sort nw))&quot;, :offset 69, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn clean-chapter\n  [keyword-chapter]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (apply str (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                                      (interpose \&quot;-\&quot;)))\n        filter ]\n    (keyword filtered-dash)))&quot;, :offset 418, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn clean-chapter\n  [keyword-chapter]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (apply str (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                                      (interpose \&quot;-\&quot;)))]\n    (keyword filtered-dash)))&quot;, :offset 402, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; content-map\n     (map (fn [[k [m]]]\n            (let [old-chapter (:chapter m)]\n              {k (-&gt; (assoc m :old-chapter old-chapter)\n                     (assoc :new-chapter (clean-chapter old-chapter))\n                     (dissoc :chapter))})))\n     (into (sorted-map)))&quot;, :offset 280, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; content-map\n     (map (fn [[k [m]]]\n            (let [old-chapter (:chapter m)]\n              {k (-&gt; (assoc m :old-chapter old-chapter)\n                     (assoc :new-chapter (clean-chapter old-chapter))\n                     (dissoc :chapter))})))\n     (into (sorted-map)) \n     count)&quot;, :offset 292, :ns &quot;zenlabel.core&quot;} {:command &quot;\n(def negative-keywords [\&quot;latihan-soal-ulangan\&quot;\n                        \&quot;latihan-soal-part\&quot;\n                        \&quot;latihan-soal\&quot;\n                        \&quot;latihan-ulangan\&quot;\n                        \&quot;latihan-set\&quot;\n                        \&quot;latihan\&quot;\n                        \&quot;ulangan-pg\&quot;\n                        \&quot;ulangan-essay\&quot;\n                        \&quot;ulangan-uraian\&quot;\n                        \&quot;ulangan\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;subbab\&quot;\n                        \&quot;set-soal\&quot;\n                        \&quot;set-essay\&quot;\n                        \&quot;set-pg\&quot;\n                        \&quot;soal-set\&quot;\n                        \&quot;soal-essay\&quot;\n                        \&quot;soal-pg\&quot;\n                        \&quot;soal-uraian\&quot;\n                        \&quot;soal\&quot;\n                        \&quot;pilihan-ganda\&quot;\n                        \&quot;uraian\&quot;\n                        \&quot;teori\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;materi\&quot;\n                        \&quot;concept\&quot;\n                        \&quot;exercise\&quot;\n                        \&quot;pts\&quot;\n                        \&quot;ptn\&quot;\n                        \&quot;pas\&quot;\n                        \&quot;pas-ganjil\&quot;\n                        \&quot;pas-genap\&quot;\n                        \&quot;part-i\&quot;\n                        \&quot;part-ii\&quot;\n                        \&quot;part-iii\&quot;\n                        \&quot;dp\&quot;\n                        \&quot;0-\&quot;\n                        \&quot;5a\&quot;\n                        \&quot;5b\&quot;])\n\n(def mapper {\&quot;soal-seleksi-ptn\&quot; [\&quot;sbmptn\&quot; \&quot;simak-ui\&quot; \&quot;spmb\&quot; \&quot;um-utul-ugm\&quot; \&quot;utul-ugm\&quot; \&quot;umb\&quot;]\n             \&quot;soal-un\&quot; [\&quot;uas\&quot; \&quot;uts\&quot;]})&quot;, :offset 1496, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn clean-chapter\n  [keyword-chapter]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (apply str (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                                      (interpose \&quot;-\&quot;)))]\n    (keyword filtered-dash)))\n\n(-&gt;&gt; content-map\n     (map (fn [[k [m]]]\n            (let [old-chapter (:chapter m)]\n              {k (-&gt; (assoc m :old-chapter old-chapter)\n                     (assoc :new-chapter (clean-chapter old-chapter))\n                     (dissoc :chapter))})))\n     (into (sorted-map)))&quot;, :offset 684, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; content-map\n     (map (fn [[k [m]]]\n            (let [old-chapter (:chapter m)]\n              {k (-&gt; (assoc m :old-chapter old-chapter)\n                     (assoc :new-chapter (clean-chapter old-chapter))\n                     (dissoc :chapter))})))\n     (group-by (fn [[k v]] (:new-chapter v)))\n     (into (sorted-map))\n     count)&quot;, :offset 337, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; content-map\n     (map (fn [[k [m]]]\n            (let [old-chapter (:chapter m)]\n              {k (-&gt; (assoc m :old-chapter old-chapter)\n                     (assoc :new-chapter (clean-chapter old-chapter))\n                     (dissoc :chapter))})))\n     (group-by (fn [[k v]] (:new-chapter v)))\n     (into (sorted-map)))&quot;, :offset 326, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; content-map\n     (map (fn [[k [m]]]\n            (let [old-chapter (:chapter m)]\n              {k (-&gt; (assoc m :old-chapter old-chapter)\n                     (assoc :new-chapter (clean-chapter old-chapter))\n                     (dissoc :chapter))})))\n     (group-by (fn [[k v]] (:new-chapter v))))&quot;, :offset 301, :ns &quot;zenlabel.core&quot;} {:command &quot;(def x)&quot;, :offset 7, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; content-map\n     (map (fn [[k [m]]]\n            (let [old-chapter (:chapter m)]\n              {k (-&gt; (assoc m :old-chapter old-chapter)\n                     (assoc :new-chapter (clean-chapter old-chapter))\n                     (dissoc :chapter))}))))&quot;, :offset 255, :ns &quot;zenlabel.core&quot;} {:command &quot;(def x *1)&quot;, :offset 10, :ns &quot;zenlabel.core&quot;} {:command &quot;(group-by (fn [[k v]] (:new-chapter v)) x)&quot;, :offset 42, :ns &quot;zenlabel.core&quot;} {:command &quot;(group-by (fn [[k v]] (:new-chapter v)) (sort x))&quot;, :offset 49, :ns &quot;zenlabel.core&quot;} {:command &quot;x&quot;, :offset 1, :ns &quot;zenlabel.core&quot;} {:command &quot;(group-by (fn [m]\n            (let [[s] (vals m)] \n              (:new-chapter m)))\n          (sort x))&quot;, :offset 103, :ns &quot;zenlabel.core&quot;} {:command &quot;(group-by (fn [m]\n            (let [[s] (vals m)] \n              (:new-chapter m)))\n          (sort s))&quot;, :offset 103, :ns &quot;zenlabel.core&quot;} {:command &quot;(group-by (fn [m]\n            (let [[s] (vals m)] \n              (:new-chapter s)))\n          (sort x))&quot;, :offset 103, :ns &quot;zenlabel.core&quot;} {:command &quot;(group-by (fn [m]\n            (let [[s] (vals m)] \n              (:new-chapter s)))\n          x)&quot;, :offset 96, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; content-map\n     (map (fn [[k [m]]]\n            (let [old-chapter (:chapter m)]\n              {k (-&gt; (assoc m :old-chapter old-chapter)\n                     (assoc :new-chapter (clean-chapter old-chapter))\n                     (dissoc :chapter))})))\n     (group-by (fn [m]\n                 (let [[v] (vals m)]\n                   (:new-chapter v)))) \n     count)&quot;, :offset 366, :ns &quot;zenlabel.core&quot;} {:command &quot;(def mapper {\&quot;soal-seleksi-ptn\&quot; [\&quot;sbmptn\&quot; \&quot;simak-ui\&quot; \&quot;spmb\&quot; \&quot;um-utul-ugm\&quot; \&quot;utul-ugm\&quot; \&quot;umb\&quot;]\n             \&quot;soal-un\&quot; [\&quot;uas\&quot; \&quot;uts\&quot;]})\n\n(defn clean-chapter\n  [keyword-chapter]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (apply str (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                                      (interpose \&quot;-\&quot;)))]\n    (keyword filtered-dash)))\n\n(-&gt;&gt; content-map\n     (map (fn [[k [m]]]\n            (let [old-chapter (:chapter m)]\n              {k (-&gt; (assoc m :old-chapter old-chapter)\n                     (assoc :new-chapter (clean-chapter old-chapter))\n                     (dissoc :chapter))})))\n     (group-by (fn [m]\n                 (let [[v] (vals m)]\n                   (:new-chapter v)))))&quot;, :offset 890, :ns &quot;zenlabel.core&quot;} {:command &quot;(count *1)&quot;, :offset 10, :ns &quot;zenlabel.core&quot;} {:command &quot;(-&gt;&gt; content-map\n     (map (fn [[k [m]]]\n            (let [old-chapter (:chapter m)]\n              {k (-&gt; (assoc m :old-chapter old-chapter)\n                     (assoc :new-chapter (clean-chapter old-chapter))\n                     (dissoc :chapter))})))\n     (group-by (fn [m]\n                 (let [[v] (vals m)]\n                   (:new-chapter v)))))&quot;, :offset 354, :ns &quot;zenlabel.core&quot;} {:command &quot;\n(def negative-keywords [\&quot;latihan-soal-ulangan\&quot;\n                        \&quot;latihan-soal-part\&quot;\n                        \&quot;latihan-soal\&quot;\n                        \&quot;latihan-ulangan\&quot;\n                        \&quot;latihan-set\&quot;\n                        \&quot;latihan\&quot;\n                        \&quot;ulangan-pg\&quot;\n                        \&quot;ulangan-essay\&quot;\n                        \&quot;ulangan-uraian\&quot;\n                        \&quot;ulangan\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;subbab\&quot;\n                        \&quot;set-soal\&quot;\n                        \&quot;set-essay\&quot;\n                        \&quot;set-pg\&quot;\n                        \&quot;soal-set\&quot;\n                        \&quot;soal-essay\&quot;\n                        \&quot;soal-pg\&quot;\n                        \&quot;soal-uraian\&quot;\n                        \&quot;soal\&quot;\n                        \&quot;pilihan-ganda\&quot;\n                        \&quot;uraian\&quot;\n                        \&quot;teori\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;materi\&quot;\n                        \&quot;concept\&quot;\n                        \&quot;exercise\&quot;\n                        \&quot;pts\&quot;\n                        \&quot;ptn\&quot;\n                        \&quot;pas\&quot;\n                        \&quot;pas-ganjil\&quot;\n                        \&quot;pas-genap\&quot;\n                        \&quot;part-i\&quot;\n                        \&quot;part-ii\&quot;\n                        \&quot;part-iii\&quot;\n                        \&quot;dp\&quot;\n                        \&quot;0-\&quot;\n                        \&quot;5a\&quot;\n                        \&quot;5b\&quot;\n                        \&quot;ch\&quot;])\n\n(def mapper {\&quot;soal-seleksi-ptn\&quot; [\&quot;sbmptn\&quot; \&quot;simak-ui\&quot; \&quot;spmb\&quot; \&quot;um-utul-ugm\&quot; \&quot;utul-ugm\&quot; \&quot;umb\&quot;]\n             \&quot;soal-un\&quot; [\&quot;uas\&quot; \&quot;uts\&quot;]})\n\n(defn clean-chapter\n  [keyword-chapter]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (apply str (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                                      (interpose \&quot;-\&quot;)\n                                      (fn [v]\n                                        (if (= \&quot;-\&quot; (first v))\n                                          (rest v)\n                                          v))))]\n    (keyword filtered-dash)))\n\n(def filtered-chapters\n  (-&gt;&gt; content-map\n       (map (fn [[k [m]]]\n              (let [old-chapter (:chapter m)]\n                {k (-&gt; (assoc m :old-chapter old-chapter)\n                       (assoc :new-chapter (clean-chapter old-chapter))\n                       (dissoc :chapter))})))\n       (group-by (fn [m]\n                   (let [[v] (vals m)]\n                     (:new-chapter v))))))&quot;, :offset 2532, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn clean-chapter\n  [keyword-chapter]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (apply str (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                                      (interpose \&quot;-\&quot;)\n                                      ((fn [v]\n                                         (if (= \&quot;-\&quot; (first v))\n                                           (rest v)\n                                           v)))))]&quot;, :offset 582, :ns &quot;zenlabel.core&quot;} {:command &quot;\n(defn clean-chapter\n  [keyword-chapter]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                           (interpose \&quot;-\&quot;))\n        filtered-dash' (if (= \&quot;-\&quot; (first filtered-dash)) (rest filtered-dash) filtered-dash)\n        str-chap (apply str filtered-dash')]\n    (keyword str-chap)))\n\n(def filtered-chapters\n  (-&gt;&gt; content-map\n       (map (fn [[k [m]]]\n              (let [old-chapter (:chapter m)]\n                {k (-&gt; (assoc m :old-chapter old-chapter)\n                       (assoc :new-chapter (clean-chapter old-chapter))\n                       (dissoc :chapter))})))\n       (group-by (fn [m]\n                   (let [[v] (vals m)]\n                     (:new-chapter v))))))&quot;, :offset 910, :ns &quot;zenlabel.core&quot;} {:command &quot;\\-&quot;, :offset 2, :ns &quot;zenlabel.core&quot;} {:command &quot;/-&quot;, :offset 2, :ns &quot;zenlabel.core&quot;} {:command &quot;(seq \&quot;-\&quot;)&quot;, :offset 9, :ns &quot;zenlabel.core&quot;} {:command &quot;(clojure.string/split \&quot;-adasdasd-\&quot; #\&quot;-\&quot;)&quot;, :offset 40, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn clean-chapter\n  [keyword-chapter]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                           (filter not-empty)\n                           (interpose \&quot;-\&quot;))\n        str-chap (apply str filtered-dash)]\n    (keyword str-chap)))&quot;, :offset 463, :ns &quot;zenlabel.core&quot;} {:command &quot;(def filtered-chapters\n  (-&gt;&gt; content-map\n       (map (fn [[k [m]]]\n              (let [old-chapter (:chapter m)]\n                {k (-&gt; (assoc m :old-chapter old-chapter)\n                       (assoc :new-chapter (clean-chapter old-chapter))\n                       (dissoc :chapter))})))\n       (group-by (fn [m]\n                   (let [[v] (vals m)]\n                     (:new-chapter v))))))&quot;, :offset 396, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn clean-chapter\n  [keyword-chapter subject]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                           (filter not-empty)\n                           (interpose \&quot;-\&quot;))\n        str-chap (apply str filtered-dash)\n        str-chap' (if (empty? str-chap)\n                    (str (name subject) \&quot;-lain\&quot;)\n                    str-chap)]\n    (keyword str-chap')))&quot;, :offset 591, :ns &quot;zenlabel.core&quot;} {:command &quot;(spit \&quot;chapters.edn\&quot; (with-out-str (clojure.pprint/pprint *1)))&quot;, :offset 63, :ns &quot;zenlabel.core&quot;} {:command &quot;*1&quot;, :offset 2, :ns &quot;zenlabel.core&quot;} {:command &quot;(count filtered-chapters)&quot;, :offset 25, :ns &quot;zenlabel.core&quot;} {:command &quot;(def negative-keywords [\&quot;latihan-soal-ulangan\&quot;\n                        \&quot;latihan-soal-part\&quot;\n                        \&quot;latihan-soal\&quot;\n                        \&quot;latihan-ulangan\&quot;\n                        \&quot;latihan-set\&quot;\n                        \&quot;latihan\&quot;\n                        \&quot;ulangan-pg\&quot;\n                        \&quot;ulangan-essay\&quot;\n                        \&quot;ulangan-uraian\&quot;\n                        \&quot;ulangan\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;subbab\&quot;\n                        \&quot;set-soal\&quot;\n                        \&quot;set-essay\&quot;\n                        \&quot;set-pg\&quot;\n                        \&quot;soal-set\&quot;\n                        \&quot;soal-essay\&quot;\n                        \&quot;soal-pg\&quot;\n                        \&quot;soal-uraian\&quot;\n                        \&quot;soal\&quot;\n                        \&quot;pilihan-ganda\&quot;\n                        \&quot;uraian\&quot;\n                        \&quot;teori\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;materi\&quot;\n                        \&quot;concept\&quot;\n                        \&quot;exercise\&quot;\n                        \&quot;pts\&quot;\n                        \&quot;ptn\&quot;\n                        \&quot;pas\&quot;\n                        \&quot;pas-ganjil\&quot;\n                        \&quot;pas-genap\&quot;\n                        \&quot;part-i\&quot;\n                        \&quot;part-ii\&quot;\n                        \&quot;part-iii\&quot;\n                        \&quot;dp\&quot;\n                        \&quot;0-\&quot;\n                        \&quot;5a\&quot;\n                        \&quot;5b\&quot;\n                        \&quot;ch\&quot;])&quot;, :offset 1392, :ns &quot;zenlabel.core&quot;} {:command &quot;(spit \&quot;chapters.edn\&quot; (with-out-str (clojure.pprint/pprint filtered-chapters)))&quot;, :offset 78, :ns &quot;zenlabel.core&quot;} {:command &quot;\n(def negative-keywords [\&quot;latihan-soal-ulangan\&quot;\n                        \&quot;latihan-soal-part\&quot;\n                        \&quot;latihan-soal\&quot;\n                        \&quot;latihan-ulangan\&quot;\n                        \&quot;latihan-set\&quot;\n                        \&quot;latihan\&quot;\n                        \&quot;ulangan-pg\&quot;\n                        \&quot;ulangan-essay\&quot;\n                        \&quot;ulangan-uraian\&quot;\n                        \&quot;ulangan\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;subbab\&quot;\n                        \&quot;set-soal\&quot;\n                        \&quot;set-essay\&quot;\n                        \&quot;set-pg\&quot;\n                        \&quot;soal-set\&quot;\n                        \&quot;soal-essay\&quot;\n                        \&quot;soal-pg\&quot;\n                        \&quot;soal-uraian\&quot;\n                        \&quot;soal\&quot;\n                        \&quot;pilihan-ganda\&quot;\n                        \&quot;uraian\&quot;\n                        \&quot;teori\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;materi\&quot;\n                        \&quot;concept\&quot;\n                        \&quot;exercise\&quot;\n                        \&quot;pts\&quot;\n                        \&quot;ptn\&quot;\n                        \&quot;pas\&quot;\n                        \&quot;pas-ganjil\&quot;\n                        \&quot;pas-genap\&quot;\n                        \&quot;part-i\&quot;\n                        \&quot;part-ii\&quot;\n                        \&quot;part-iii\&quot;\n                        \&quot;pg-set\&quot;\n                        \&quot;dp\&quot;\n                        \&quot;0-\&quot;\n                        \&quot;5a\&quot;\n                        \&quot;5b\&quot;\n                        \&quot;ch\&quot;])\n\n(def mapper {\&quot;soal-seleksi-ptn\&quot; [\&quot;sbmptn\&quot; \&quot;simak-ui\&quot; \&quot;spmb\&quot; \&quot;um-utul-ugm\&quot; \&quot;utul-ugm\&quot; \&quot;umb\&quot;]\n             \&quot;soal-un\&quot; [\&quot;uas\&quot; \&quot;uts\&quot;]})\n\n(defn clean-chapter\n  [keyword-chapter subject]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                           (filter not-empty)\n                           (interpose \&quot;-\&quot;))\n        str-chap (apply str filtered-dash)\n        str-chap' (if (empty? str-chap)\n                    (str (name subject) \&quot;-lain-lain\&quot;)\n                    str-chap)]\n    (keyword str-chap')))\n\n(def filtered-chapters\n  (-&gt;&gt; content-map\n       (map (fn [[k [m]]]\n              (let [old-chapter (:chapter m)\n                    subject (:subject-keyword m)]\n                {k (-&gt; (assoc m :old-chapter old-chapter)\n                       (assoc :new-chapter (clean-chapter old-chapter subject))\n                       (dissoc :chapter))})))\n       (group-by (fn [m]\n                   (let [[v] (vals m)]\n&quot;, :offset 2569, :ns &quot;zenlabel.core&quot;} {:command &quot;(def negative-keywords [\&quot;latihan-soal-ulangan\&quot;\n                        \&quot;latihan-soal-part\&quot;\n                        \&quot;latihan-soal\&quot;\n                        \&quot;latihan-ulangan\&quot;\n                        \&quot;latihan-set\&quot;\n                        \&quot;latihan\&quot;\n                        \&quot;ulangan-pg\&quot;\n                        \&quot;ulangan-essay\&quot;\n                        \&quot;ulangan-uraian\&quot;\n                        \&quot;ulangan\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;subbab\&quot;\n                        \&quot;set-soal\&quot;\n                        \&quot;set-essay\&quot;\n                        \&quot;set-pg\&quot;\n                        \&quot;soal-set\&quot;\n                        \&quot;soal-essay\&quot;\n                        \&quot;soal-pg\&quot;\n                        \&quot;soal-uraian\&quot;\n                        \&quot;soal\&quot;\n                        \&quot;pilihan-ganda\&quot;\n                        \&quot;uraian\&quot;\n                        \&quot;teori\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;materi\&quot;\n                        \&quot;concept\&quot;\n                        \&quot;exercise\&quot;\n                        \&quot;pts\&quot;\n                        \&quot;ptn\&quot;\n                        \&quot;pas\&quot;\n                        \&quot;pas-ganjil\&quot;\n                        \&quot;pas-genap\&quot;\n                        \&quot;part-i\&quot;\n                        \&quot;part-ii\&quot;\n                        \&quot;part-iii\&quot;\n                        \&quot;pg-set\&quot;\n                        \&quot;dp\&quot;\n                        \&quot;0-\&quot;\n                        \&quot;5a\&quot;\n                        \&quot;5b\&quot;\n                        \&quot;ch\&quot;])\n\n(def mapper {\&quot;soal-seleksi-ptn\&quot; [\&quot;sbmptn\&quot; \&quot;simak-ui\&quot; \&quot;spmb\&quot; \&quot;um-utul-ugm\&quot; \&quot;utul-ugm\&quot; \&quot;umb\&quot;]\n             \&quot;soal-un\&quot; [\&quot;uas\&quot; \&quot;uts\&quot;]})&quot;, :offset 1557, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn clean-chapter\n  [keyword-chapter subject]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                           (filter not-empty)\n                           (interpose \&quot;-\&quot;))\n        str-chap (apply str filtered-dash)\n        str-chap' (if (empty? str-chap)\n                    (str (name subject) \&quot;-lain-lain\&quot;)\n                    str-chap)]\n    (keyword str-chap')))&quot;, :offset 596, :ns &quot;zenlabel.core&quot;} {:command &quot;(def filtered-chapters\n  (-&gt;&gt; content-map\n       (map (fn [[k [m]]]\n              (let [old-chapter (:chapter m)\n                    subject (:subject-keyword m)]\n                {k (-&gt; (assoc m :old-chapter old-chapter)\n                       (assoc :new-chapter (clean-chapter old-chapter subject))\n                       (dissoc :chapter))})))\n       (group-by (fn [m]\n                   (let [[v] (vals m)]\n                     (:new-chapter v))))))&quot;, :offset 453, :ns &quot;zenlabel.core&quot;} {:command &quot;\n(def negative-keywords [\&quot;latihan-soal-ulangan\&quot;\n                        \&quot;latihan-soal-part\&quot;\n                        \&quot;latihan-soal\&quot;\n                        \&quot;latihan-ulangan\&quot;\n                        \&quot;latihan-set\&quot;\n                        \&quot;latihan\&quot;\n                        \&quot;ulangan-pg\&quot;\n                        \&quot;ulangan-essay\&quot;\n                        \&quot;ulangan-uraian\&quot;\n                        \&quot;ulangan\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;subbab\&quot;\n                        \&quot;set-soal\&quot;\n                        \&quot;set-essay\&quot;\n                        \&quot;set-pg\&quot;\n                        \&quot;soal-set\&quot;\n                        \&quot;soal-essay\&quot;\n                        \&quot;soal-pg\&quot;\n                        \&quot;soal-uraian\&quot;\n                        \&quot;soal\&quot;\n                        \&quot;pilihan-ganda\&quot;\n                        \&quot;uraian\&quot;\n                        \&quot;teori-dan-latihan-soal\&quot;\n                        \&quot;teori\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;materi\&quot;\n                        \&quot;concept\&quot;\n                        \&quot;exercise\&quot;\n                        \&quot;essay\&quot;\n                        \&quot;set-\&quot;\n                        \&quot;-set\&quot;\n                        \&quot;kelas-sd\&quot;\n                        \&quot;update\&quot;\n                        \&quot;pts\&quot;\n                        \&quot;pas\&quot;\n                        \&quot;pas-ganjil\&quot;\n                        \&quot;pas-genap\&quot;\n                        \&quot;part-i\&quot;\n                        \&quot;part-ii\&quot;\n                        \&quot;part-iii\&quot;\n                        \&quot;revisi\&quot;\n                        \&quot;pg-set\&quot;\n                        \&quot;pg\&quot;\n                        \&quot;dp\&quot;\n                        \&quot;5a\&quot;\n                        \&quot;5b\&quot;\n                        \&quot;ch\&quot; ])\n\n(def mapper {\&quot;soal-seleksi-ptn\&quot; [\&quot;sbmptn\&quot; \&quot;simak-ui\&quot; \&quot;spmb\&quot; \&quot;um-utul-ugm\&quot; \&quot;utul-ugm\&quot; \&quot;umb\&quot;]\n             \&quot;soal-un\&quot; [\&quot;uas\&quot; \&quot;uts\&quot;]})\n&quot;, :offset 1774, :ns &quot;zenlabel.core&quot;} {:command &quot;(defn clean-chapter\n  [keyword-chapter subject]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                           (filter not-empty)\n                           (interpose \&quot;-\&quot;))\n        str-chap (apply str filtered-dash)\n        str-chap' (if (empty? str-chap)\n                    (str (name subject) \&quot;-lain-lain\&quot;)\n                    str-chap)]\n    (keyword str-chap')))\n\n(def filtered-chapters\n  (-&gt;&gt; content-map\n       (map (fn [[k [m]]]\n              (let [old-chapter (:chapter m)\n                    subject (:subject-keyword m)]\n                {k (-&gt; (assoc m :old-chapter old-chapter)\n                       (assoc :new-chapter (clean-chapter old-chapter subject))\n                       (dissoc :chapter))})))\n       (group-by (fn [m]\n                   (let [[v] (vals m)]\n                     (:new-chapter v))))))&quot;, :offset 1051, :ns &quot;zenlabel.core&quot;} {:command &quot;(require 'zenlabel.core)&quot;, :offset 24, :ns &quot;zenlabel.core&quot;} {:command &quot;(in-ns 'zenlabel.core)&quot;, :offset 22, :ns &quot;zenlabel.core&quot;} {:command &quot;(spit \&quot;chapters.edn\&quot; (with-out-str (clojure.pprint/pprint (sort (keys filtered-chapters)))))&quot;, :offset 92, :ns &quot;zenlabel.core&quot;} {:command &quot;\n(def content-map (clojure.edn/read-string (slurp \&quot;content-map.edn\&quot;)))\n\n(def negative-keywords [\&quot;latihan-soal-ulangan\&quot;\n                        \&quot;latihan-soal-part\&quot;\n                        \&quot;latihan-soal\&quot;\n                        \&quot;latihan-ulangan\&quot;\n                        \&quot;latihan-set\&quot;\n                        \&quot;latihan\&quot;\n                        \&quot;ulangan-pg\&quot;\n                        \&quot;ulangan-essay\&quot;\n                        \&quot;ulangan-uraian\&quot;\n                        \&quot;ulangan\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;subbab\&quot;\n                        \&quot;set-soal\&quot;\n                        \&quot;set-essay\&quot;\n                        \&quot;set-pg\&quot;\n                        \&quot;soal-set\&quot;\n                        \&quot;soal-essay\&quot;\n                        \&quot;soal-pg\&quot;\n                        \&quot;soal-uraian\&quot;\n                        \&quot;soal\&quot;\n                        \&quot;pilihan-ganda\&quot;\n                        \&quot;uraian\&quot;\n                        \&quot;teori-dan-latihan-soal\&quot;\n                        \&quot;teori\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;materi\&quot;\n                        \&quot;concept\&quot;\n                        \&quot;exercise\&quot;\n                        \&quot;essay\&quot;\n                        \&quot;set-\&quot;\n                        \&quot;-set\&quot;\n                        \&quot;kelas-sd\&quot;\n                        \&quot;update\&quot;\n                        \&quot;-0-sampai\&quot;\n                        \&quot;-no-81-90\&quot;\n                        \&quot;pas-ganjil\&quot;\n                        \&quot;pts\&quot;\n                        \&quot;pas-genap\&quot;\n                        \&quot;part-i\&quot;\n                        \&quot;part-ii\&quot;\n                        \&quot;part-iii\&quot;\n                        \&quot;revisi\&quot;\n                        \&quot;pg-set\&quot;\n                        \&quot;pg\&quot;\n                        \&quot;dp\&quot;\n                        \&quot;5a\&quot;\n                        \&quot;5b\&quot;\n                        \&quot;ch\&quot; ])\n\n(def mapper {\&quot;soal-seleksi-ptn\&quot; [\&quot;sbmptn\&quot; \&quot;simak-ui\&quot; \&quot;spmb\&quot; \&quot;um-utul-ugm\&quot; \&quot;utul-ugm\&quot; \&quot;umb\&quot;]\n             \&quot;soal-un\&quot; [\&quot;uas\&quot; \&quot;uts\&quot;]})\n\n(defn clean-chapter\n  [keyword-chapter subject]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                           (filter not-empty)\n                           (interpose \&quot;-\&quot;))\n        str-chap (apply str filtered-dash)\n        str-chap' (if (empty? str-chap)\n                    (str (name subject) \&quot;-lain-lain\&quot;)\n                    str-chap)]\n    (keyword str-chap')))\n\n(def filtered-chapters\n  (-&gt;&gt; content-map\n       (map (fn [[k [m]]]\n              (let [old-chapter (:chapter m)\n                    subject (:subject-keyword m)]\n                {k (-&gt; (assoc m :old-chapter old-chapter)\n                       (assoc :new-chapter (clean-chapter old-chapter subject))\n                       (dissoc :chapter))})))\n       (group-by (fn [m]\n                   (let [[v] (vals m)]\n                     (:new-chapter v))))))&quot;, :offset 2939, :ns &quot;zenlabel.core&quot;} {:command &quot;\n(def negative-keywords [\&quot;latihan-soal-ulangan\&quot;\n                        \&quot;latihan-soal-part\&quot;\n                        \&quot;latihan-soal\&quot;\n                        \&quot;latihan-ulangan\&quot;\n                        \&quot;latihan-set\&quot;\n                        \&quot;latihan\&quot;\n                        \&quot;ulangan-pg\&quot;\n                        \&quot;ulangan-essay\&quot;\n                        \&quot;ulangan-uraian\&quot;\n                        \&quot;ulangan\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;subbab\&quot;\n                        \&quot;set-soal\&quot;\n                        \&quot;set-essay\&quot;\n                        \&quot;set-pg\&quot;\n                        \&quot;soal-set\&quot;\n                        \&quot;soal-essay\&quot;\n                        \&quot;soal-pg\&quot;\n                        \&quot;soal-uraian\&quot;\n                        \&quot;soal\&quot;\n                        \&quot;pilihan-ganda\&quot;\n                        \&quot;uraian\&quot;\n                        \&quot;teori-dan-latihan-soal\&quot;\n                        \&quot;teori-dan-soal\&quot;\n                        \&quot;teori\&quot;\n                        \&quot;konsep\&quot;\n                        \&quot;materi\&quot;\n                        \&quot;concept\&quot;\n                        \&quot;exercise\&quot;\n                        \&quot;essay\&quot;\n                        \&quot;set-\&quot;\n                        \&quot;-set\&quot;\n                        \&quot;kelas-sd\&quot;\n                        \&quot;update\&quot;\n                        \&quot;-0-sampai\&quot;\n                        \&quot;-no-81-90\&quot;\n                        \&quot;pas-ganjil\&quot;\n                        \&quot;pts\&quot;\n                        \&quot;pas-genap\&quot;\n                        \&quot;part-i\&quot;\n                        \&quot;part-ii\&quot;\n                        \&quot;part-iii\&quot;\n                        \&quot;revisi\&quot;\n                        \&quot;pg-set\&quot;\n                        \&quot;pg\&quot;\n                        \&quot;dp\&quot;\n                        \&quot;5a\&quot;\n                        \&quot;5b\&quot;\n                        \&quot;ch\&quot; ])\n\n(def mapper {\&quot;soal-seleksi-ptn\&quot; [\&quot;sbmptn\&quot; \&quot;simak-ui\&quot; \&quot;spmb\&quot; \&quot;um-utul-ugm\&quot; \&quot;utul-ugm\&quot; \&quot;umb\&quot;]\n             \&quot;soal-un\&quot; [\&quot;uas\&quot; \&quot;uts\&quot;]})\n\n(defn clean-chapter\n  [keyword-chapter subject]\n  (let [keyword-name (name keyword-chapter)\n        pattren (re-pattern (apply str (interpose \&quot;|\&quot; negative-keywords)))\n        filtered-chapter (clojure.string/replace keyword-name pattren \&quot;\&quot;)\n        filtered-dash (-&gt;&gt; (clojure.string/split filtered-chapter #\&quot;-\&quot;)\n                           (filter not-empty)\n                           (interpose \&quot;-\&quot;))\n        str-chap (apply str filtered-dash)\n        str-chap' (if (empty? str-chap)\n                    (str (name subject) \&quot;-lain-lain\&quot;)\n                    str-chap)]\n    (keyword str-chap')))\n\n(def filtered-chapters\n  (-&gt;&gt; content-map\n       (map (fn [[k [m]]]\n              (let [old-chapter (:chapter m)\n                    subject (:subject-keyword m)]\n                {k (-&gt; (assoc m :old-chapter old-chapter)\n                       (assoc :new-chapter (clean-chapter old-chapter subject))\n                       (dissoc :chapter))})))\n       (group-by (fn [m]\n                   (let [[v] (vals m)]\n                     (:new-chapter v))))))&quot;, :offset 2909, :ns &quot;zenlabel.core&quot;} {:command &quot;(count (keys filtered-chapters))&quot;, :offset 32, :ns &quot;zenlabel.core&quot;} {:command &quot;(def filtered-chapters\n  (-&gt;&gt; content-map\n       (map (fn [[k [m]]]\n              (let [old-chapter (:chapter m)\n                    subject (:subject-keyword m)]\n                {k (-&gt; (assoc m :old-chapter old-chapter)\n                       (assoc :new-chapter (clean-chapter old-chapter subject))\n                       (dissoc :chapter))})))\n       #_(group-by (fn [m]\n                     (let [[v] (vals m)]\n                       (:new-chapter v))))))&quot;, :offset 459, :ns &quot;zenlabel.core&quot;} {:command &quot;filtered-chapters&quot;, :offset 17, :ns &quot;zenlabel.core&quot;} {:command &quot;(def college-prep (-&gt;&gt; [\&quot;sbmptn\&quot; \&quot;simak-ui\&quot; \&quot;spmb\&quot; \&quot;um-utul-ugm\&quot; \&quot;utul-ugm\&quot; \&quot;umb\&quot; \&quot;usm\&quot; \&quot;stan\&quot;]\n                       (interpose \&quot;|\&quot;)\n                       (apply str)\n                       re-pattern))&quot;, :offset 205, :ns &quot;zenlabel.core&quot;} {:command &quot;college-prep&quot;, :offset 12, :ns &quot;zenlabel.core&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
    </configuration>
    <configuration name="nREPL" type="ClojureREPL" factoryName="Local">
      <module name="zenlabel" />
      <setting name="replType" value="1" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <patterns />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <properties />
      <listeners />
    </configuration>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="92b7605b-3db8-4026-9634-4562d4783b34" name="Default" comment="" />
      <created>1532486632228</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1532486632228</updated>
      <workItem from="1532486639278" duration="18665000" />
      <workItem from="1532595553396" duration="2898000" />
      <workItem from="1532680912100" duration="2170000" />
      <workItem from="1532767287456" duration="1898000" />
      <workItem from="1532849721312" duration="1245000" />
      <workItem from="1536834049511" duration="3557000" />
      <workItem from="1537160928592" duration="10472000" />
      <workItem from="1537176019577" duration="6698000" />
      <workItem from="1537243542771" duration="272000" />
      <workItem from="1537430276418" duration="1539000" />
      <workItem from="1537436981659" duration="2267000" />
      <workItem from="1537770273145" duration="1357000" />
      <workItem from="1538372209138" duration="14966000" />
      <workItem from="1538399666351" duration="3121000" />
      <workItem from="1538448100623" duration="3542000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="74667000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="0" width="1680" height="1050" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="right" id="Palette&#9;" order="4" />
      <window_info id="Image Layers" order="2" />
      <window_info anchor="right" id="Capture Analysis" order="5" />
      <window_info anchor="bottom" id="Event Log" order="7" side_tool="true" />
      <window_info anchor="right" id="Maven Projects" order="6" />
      <window_info anchor="bottom" id="Database Changes" order="8" show_stripe_button="false" />
      <window_info active="true" anchor="bottom" id="REPL" order="11" sideWeight="0.55738705" side_tool="true" visible="true" weight="0.36335722" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Version Control" order="9" sideWeight="0.35042736" weight="0.2988741" />
      <window_info anchor="right" id="Leiningen" order="7" />
      <window_info anchor="bottom" id="Terminal" order="10" sideWeight="0.44261295" visible="true" weight="0.36335722" />
      <window_info id="Capture Tool" order="2" />
      <window_info id="Designer" order="2" />
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.2930403" />
      <window_info anchor="right" id="Database" order="8" />
      <window_info id="Learn" order="2" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info id="UI Designer" order="2" />
      <window_info anchor="right" id="Theme Preview" order="9" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="bottom" id="Find" order="1" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3420">
          <caret line="228" column="16" lean-forward="true" selection-start-line="228" selection-start-column="16" selection-end-line="228" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/chapters.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="75">
          <caret line="5" column="1" lean-forward="true" selection-start-line="5" selection-start-column="1" selection-end-line="5" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/content-map.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="82140">
          <caret line="5476" column="27" selection-start-line="5476" selection-start-column="13" selection-end-line="5476" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/chapter-to-content-id.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="270">
          <caret line="18" column="5" selection-start-line="18" selection-start-column="5" selection-end-line="18" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3630">
          <caret line="242" column="29" selection-start-line="242" selection-start-column="29" selection-end-line="242" selection-end-column="29" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/content-map.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="269925">
          <caret line="17995" column="44" selection-start-line="17995" selection-start-column="26" selection-end-line="17995" selection-end-column="44" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/chapter-to-content-id.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="270">
          <caret line="18" column="5" selection-start-line="18" selection-start-column="5" selection-end-line="18" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/chapters.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="735">
          <caret line="49" column="23" lean-forward="true" selection-start-line="49" selection-start-column="5" selection-end-line="49" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3015">
          <caret line="201" selection-start-line="201" selection-end-line="204" selection-end-column="68" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/new-chapters.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="38070">
          <caret line="2538" column="33" lean-forward="true" selection-start-line="2538" selection-start-column="33" selection-end-line="2538" selection-end-column="33" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2625">
          <caret line="175" selection-start-line="175" selection-end-line="179" selection-end-column="31" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/pair.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="165">
          <caret line="11" column="12" lean-forward="true" selection-start-line="11" selection-start-column="12" selection-end-line="11" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/content-map.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="82560">
          <caret line="5504" selection-start-line="5504" selection-end-line="5504" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="5100">
          <caret line="340" column="16" lean-forward="true" selection-start-line="340" selection-start-column="16" selection-end-line="340" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2805">
          <caret line="187" column="18" selection-start-line="187" selection-start-column="18" selection-end-line="187" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="240">
          <caret line="16" column="27" selection-start-line="16" selection-start-column="27" selection-end-line="16" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2415">
          <caret line="161" column="12" lean-forward="true" selection-start-line="161" selection-start-column="12" selection-end-line="161" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1470">
          <caret line="98" selection-start-line="98" selection-end-line="112" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/raden.edn" />
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="240">
          <caret line="16" column="27" selection-start-line="16" selection-start-column="27" selection-end-line="16" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1335">
          <caret line="89" column="42" selection-start-line="89" selection-start-column="42" selection-end-line="89" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="555">
          <caret line="37" column="18" lean-forward="true" selection-end-line="341" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="240">
          <caret line="16" column="12" lean-forward="true" selection-start-line="16" selection-start-column="12" selection-end-line="16" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1380">
          <caret line="92" column="48" lean-forward="true" selection-start-line="92" selection-start-column="48" selection-end-line="92" selection-end-column="48" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="4905">
          <caret line="327" column="18" selection-start-line="327" selection-start-column="18" selection-end-line="327" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2460">
          <caret line="164" column="38" lean-forward="true" selection-start-line="164" selection-start-column="38" selection-end-line="164" selection-end-column="38" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1110">
          <caret line="74" selection-start-line="74" selection-start-column="1" selection-end-line="78" selection-end-column="30" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="4905">
          <caret line="327" column="18" selection-start-line="327" selection-start-column="18" selection-end-line="327" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/raden.edn" />
    <entry file="file://$PROJECT_DIR$/cg-map2.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="10" column="25" lean-forward="true" selection-start-line="10" selection-start-column="25" selection-end-line="10" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/new-subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="165">
          <caret line="11" column="36" lean-forward="true" selection-start-line="11" selection-start-column="36" selection-end-line="11" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="17" selection-start-line="6" selection-start-column="17" selection-end-line="6" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/pair.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="11" column="12" selection-start-line="11" selection-start-column="12" selection-end-line="11" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/subjects.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-675">
          <caret line="225" column="23" selection-start-line="225" selection-start-column="11" selection-end-line="225" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/new-chapters.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-21751">
          <caret line="2109" selection-start-line="2109" selection-end-line="2109" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/chapter-to-content-id.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="270">
          <caret line="18" column="5" selection-start-line="18" selection-start-column="5" selection-end-line="18" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/content-map.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="190">
          <caret line="5476" column="27" selection-start-line="5476" selection-start-column="13" selection-end-line="5476" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/chapters.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-21732">
          <caret line="10" column="18" selection-start-line="10" selection-start-column="18" selection-end-line="10" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/zenlabel/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="239">
          <caret line="293" column="30" lean-forward="true" selection-start-line="293" selection-start-column="30" selection-end-line="293" selection-end-column="30" />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArquillianSettingsConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>zenlabel</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Leiningen: args4j:2.33</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>